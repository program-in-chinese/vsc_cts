{"version":3,"sources":["rules/noTypeAssertionWhitespaceRule.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iCAAmC;AACnC,+BAAiC;AAEjC;IAA0B,wBAAuB;IAAjD;;IAMA,CAAC;IAHU,oBAAK,GAAZ,UAAa,UAAyB;QAClC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAJa,4BAAuB,GAAG,yDAAyD,CAAC;IAKtG,WAAC;CAND,AAMC,CANyB,IAAI,CAAC,KAAK,CAAC,YAAY,GAMhD;AANY,oBAAI;AAQjB,cAAc,GAA2B;IACrC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IACvC,eAAe,IAAa;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC,CAAC;YACtD,IAAM,OAAO,GAAG,IAAwB,CAAC;YACzC,IAAM,uBAAuB,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAC1D,IAAM,sBAAsB,GAAG,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC7D,EAAE,CAAC,CAAC,uBAAuB,KAAK,sBAAsB,CAAC,CAAC,CAAC;gBACrD,GAAG,CAAC,UAAU,CAAC,uBAAuB,EAAE,sBAAsB,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;YAClG,CAAC;QACL,CAAC;QACD,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACjC,CAAC;AACL,CAAC","file":"noTypeAssertionWhitespaceRule.js","sourcesContent":["import * as Lint from \"tslint/lib\";\r\nimport * as ts from \"typescript\";\r\n\r\nexport class Rule extends Lint.Rules.AbstractRule {\r\n    public static TRAILING_FAILURE_STRING = \"Excess trailing whitespace found around type assertion.\";\r\n\r\n    public apply(sourceFile: ts.SourceFile): Lint.RuleFailure[] {\r\n        return this.applyWithFunction(sourceFile, walk);\r\n    }\r\n}\r\n\r\nfunction walk(ctx: Lint.WalkContext<void>): void {\r\n    ts.forEachChild(ctx.sourceFile, recur);\r\n    function recur(node: ts.Node) {\r\n        if (node.kind === ts.SyntaxKind.TypeAssertionExpression) {\r\n            const refined = node as ts.TypeAssertion;\r\n            const leftSideWhitespaceStart = refined.type.getEnd() + 1;\r\n            const rightSideWhitespaceEnd = refined.expression.getStart();\r\n            if (leftSideWhitespaceStart !== rightSideWhitespaceEnd) {\r\n                ctx.addFailure(leftSideWhitespaceStart, rightSideWhitespaceEnd, Rule.TRAILING_FAILURE_STRING);\r\n            }\r\n        }\r\n        ts.forEachChild(node, recur);\r\n    }\r\n}\r\n"]}